apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
	}
}

sourceCompatibility = '1.8'

group = 'model'
version = '7.0.0'

ext {
	slf4j_version = '1.7.10'
	javaee_version = '7.0'
	guice_version = '4.0-beta5'
	junit_version = '4.12'
	mockito_version = '2.0.5-beta'
	jmockit_version = '1.16'
}

repositories {
	jcenter()
}

sourceSets {
	api {}
	main {
		java {
			srcDirs = ['src/api/java', 'src/main/java']
		}
	}
	ui {}
}

configurations {
	uiCompile {
		extendsFrom compile
	}
}

dependencies {
	compile fileTree(dir: 'src/main/resources', include: '*.jar')
	compile "org.slf4j:slf4j-api:${slf4j_version}"
	compile "javax:javaee-api:${javaee_version}"
	compile "com.google.inject:guice:${guice_version}"
	compile "com.google.inject.extensions:guice-assistedinject:${guice_version}"
	uiCompile sourceSets.api.output
	testCompile "junit:junit:${junit_version}"
	testCompile "org.jmockit:jmockit:${jmockit_version}"
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}

task apiJar(type: Jar) {
	baseName = baseName + "-$sourceSets.api.name"
	from sourceSets.api.output
	from sourceSets.api.allSource
}

jar {
	from sourceSets.main.allJava
}

task uiJar(type: Jar) {
	baseName = baseName + "-$sourceSets.ui.name"
	from sourceSets.ui.output
	from sourceSets.ui.allSource
}

publishing {
	publications {
		api(MavenPublication) {
			artifactId = artifactId + "-$sourceSets.api.name"
			artifact apiJar
		}
		main(MavenPublication) {
			from components.java
		}
		ui(MavenPublication) {
			artifactId = artifactId + "-$sourceSets.ui.name"
			artifact uiJar
		}
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.enabled true
	}
}
