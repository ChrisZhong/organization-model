buildscript {
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE'
    }
}
plugins {
    id 'eclipse'
    id 'idea'
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id 'org.sonarqube' version '2.0.1'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    group 'io.github.runtimemodels'
    version '7.0.0' + (System.getenv('TRAVIS_BUILD_NUMBER') == null ? '-SNAPSHOT' : '-b' + System.getenv('TRAVIS_BUILD_NUMBER'))

    repositories {
        jcenter()
    }

    dependencyManagement {
        dependencies {
            dependency 'javax:javaee-api:7.0'
            dependency 'org.jmockit:jmockit:1.25'
            dependency 'org.projectlombok:lombok:1.16.10'
        }

        imports {
            mavenBom 'io.spring.platform:platform-bom:2.0.6.RELEASE'
            mavenBom 'com.google.inject:guice-bom:4.0'
        }
    }

    jacocoTestReport {
        reports {
            xml {
                enabled true
            }
        }
    }

    task sourceJar(type: Jar) {
        classifier 'sources'
        from sourceSets.main.allJava
    }

    artifacts {
        archives sourceJar
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifact sourceJar
            }
        }
    }
}

coveralls {
    sourceDirs = subprojects.sourceSets.main.java.srcDirs.flatten()
}

task jacocoTestReport(type: JacocoReport) {
    dependsOn subprojects.jacocoTestReport
    jacocoClasspath = files(subprojects.configurations.jacocoAnt)
    sourceDirectories = files(subprojects.sourceSets.main.java.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output.classesDir)
    executionData = files(files(subprojects.jacocoTestReport.executionData).findAll { it.exists() })
}

sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarqube.com'
        property 'sonar.login', System.getenv('SONAR_TOKEN')
        property 'sonar.projectKey', 'chazm'
        if (System.getenv('TRAVIS_PULL_REQUEST') != null && System.getenv('TRAVIS_PULL_REQUEST') != 'false') {
            property 'sonar.analysis.mode', 'preview'
            property 'sonar.github.pullRequest', System.getenv('TRAVIS_PULL_REQUEST')
            property 'sonar.github.repository', System.getenv('TRAVIS_REPO_SLUG')
            property 'sonar.github.oauth', System.getenv('GITHUB_TOKEN')
        }
    }
}

task printInfo << {
    println "  - Modules: ${subprojects.size()}"
    subprojects.each {
        println "  - ${it.name}'s archive artifacts: ${it.configurations.archives.allArtifacts.size()}"
        it.configurations.archives.artifacts.files.each {
            println "    - ${it.name}"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

